https://react-bootstrap.github.io/getting-started.html

============================================

npm install -g create-react-app
C:\Users\QUOC CUONG\AppData\Roaming\npm\node_modules\create-react-app\node_modules

Success! Created countdownchamp at Z:\react\countdownchamp
Inside that directory, you can run several commands:

  npm start
    Starts the development server.

  npm run build
    Bundles the app into static files for production.

  npm test
    Starts the test runner.

  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you can't go back!

We suggest that you begin by typing:

  cd countdownchamp
  npm start

Happy hacking!

Npm is a package manager for node modules. Node modules are packages of javascript code that help applications run.
 There's probably alternatives, but the command line is the quickest way to set up a project. As you continue to explore programming, you'll find the command line to be not just useful, but necessary.
 
============================================
Lecture 11- Creating your first component
Q&A
Hi. Why is Component imported in curly brackets?
 
The Component is imported in curly brackets because it's not the default class for the 'react' module.
React is the default module. However, it's still exported from the same file location. When it's not the default class, but still exported, we can access it through curly brackets.

============================================
Coding Break: Updating State
Section 2, Lecture 18

Coding Break: Updating State

How about a short coding break? Grab some tea if you’d like. Or just skip to the next video to keep developing countdownChamp!

However, let’s take a moment to think about React state. Now that we have state introduced, let’s lay down the law on how to properly update state without breaking your awesome applications.

The golden rule of React: never mutate state directly. I can’t repeat this enough. In order to change your state data, you can’t manipulate it like you would with normal variables. For example, something like `x++` or `counter += 1` would be fine in any other case. But in order to update state, you must use the setState() function and have new instances of data.

It’s one of those rules that will become more clear as you continue building applications.

So which state in the United States has laws that you can’t update directly?

The React State.

Thank you, I’ll be here all night :)

Let’s keep coding!

============================================

Summary and Challenges
Section 2, Lecture 23

Countdown Champ

Congratulations on finishing countdown champ! You just built your first app with React JS. Here’s an overview of the important concepts that you just learned:

    React Components - re-usable and independent pieces of React code that comprise the User Interface.

    ES6 importing and exporting - a new syntax for sharing code between separate files. Used in cases like `import React from ‘react’`

    State - the pertinent data to an application. Each component has its local state as long as you declare add the constructor to a Component and declare its state object.

    Updating State - When updating state, make sure to never mutate state directly. Doing so will lead to fatal errors in your application. Instead, re-declare new instances of state arrays or objects and use the setState() function to update state.

    Props - similar to state, except this data inherits from parent component specifying pieces of state as properties.

    LifeCycle Methods - events in React components that trigger in cases such as rendering on or off the screen, or during state updates. One example is the `componentDidMount()` lifeCycle hook.

Now, how about testing yourself and tackling a challenge or two?

Challenges:

    Make a separate component that works like a stopwatch. The user inputs the amount of time for the clock to run, and it starts counting down to 0.

    Add an alert message that pops up when the timer counts down to 0.
    Try running `npm build` for a build version and host the code on your website or any other host!


